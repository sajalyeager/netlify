{"version":3,"sources":["logo.svg","Navbar.js","Body.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","account","className","Body","canidate1","canidate2","votecanidate","useState","Canidate","setCandidate","style","color","width","borderStyle","borderWidth","borderColor","id","name","voteCount","onSubmit","e","preventDefault","Number","window","alert","onChange","target","value","console","log","defaultValue","App","useEffect","loadWeb3","loadBlockchaindata","Currentaccount","setCurrentaccount","loader","setloader","Electionsm","setElectionsm","candidate1","setcandidate1","candidate2","setcandidate2","a","ethereum","web3","Web3","enable","currentProvider","eth","getAccounts","accounts","net","getId","networkId","networkData","electionabi","networks","election","Contract","abi","address","methods","candidates","call","canidateid","vote","send","from","on","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.def9ceda.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\n\nconst Navbar = ({account}) => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark shadow mb-5\">\n      <p className=\"navbar-brand my-auto\">ElectionDapp</p>  \n      <ul className=\"navbar-nav\">\n       <li className =\"nav-item text-white\">{account}</li>\n      </ul>\n      </nav>\n    )\n}\n\nexport default Navbar\n","import React, { useState } from \"react\";\n\n\n\n\nconst Body = ({canidate1,canidate2,votecanidate,account}) => {\n    const [Canidate, setCandidate] = useState(\"\");\n    const onchange = (e) => {\n        setCandidate(e.target.value);\n        console.log(e.target.value);\n      };\n    \n      const onsubmit = (e) => {\n        e.preventDefault();\n        if (Canidate.id !== 0) votecanidate(Number(Canidate));\n        else window.alert(\"there is error in submission\");\n      };\n    \n    return (\n        <div className=\"mt-4 text-center\" style={{ color: \"#000000\" }}>\n      <h2>Election Results</h2>\n      <hr\n        style={{\n          width: \"70%\",\n          borderStyle: \"solid\",\n          borderWidth: \"2px\",\n          borderColor: \"#000000\",\n        }}\n      />\n      <div className=\"p-3 ml-auto mr-auto\" style={{ width: \"40%\" }}>\n        <div className=\"row ml-auto mr-auto  mb-2\" style={{ width: \"90%\" }}>\n          <div className=\"col\">\n            <p>#</p>\n          </div>\n          <div className=\"col\">\n            <p>Name</p>\n          </div>\n          <div className=\"col\">\n            <p>Votes</p>\n          </div>\n        </div>\n        <hr\n          style={{ width: \"90%\", borderStyle: \"solid\", borderColor: \"#000000\" }}\n        />\n        <div\n          className=\"row ml-auto mr-auto mt-2  mb-2\"\n          style={{ width: \"90%\" }}\n        >\n          <div className=\"col\">\n            <p>{canidate1.id}</p>\n          </div>\n          <div className=\"col\">\n            <p>{canidate1.name}</p>\n          </div>\n          <div className=\"col\">\n            <p>{canidate1.voteCount}</p>\n          </div>\n        </div>\n        <hr\n          style={{ width: \"90%\", borderStyle: \"solid\", borderColor: \"#000000\" }}\n        />\n        <div\n          className=\"row ml-auto mr-auto mt-2  mb-2\"\n          style={{ width: \"90%\" }}\n        >\n          <div className=\"col\">\n            <p>{canidate2.id}</p>\n          </div>\n          <div className=\"col\">\n            <p>{canidate2.name}</p>\n          </div>\n          <div className=\"col\">\n            <p>{canidate2.voteCount}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"my-5 mr-auto ml-auto text-left\" style={{ width: \"70%\" }}>\n        <h5>Cast Your Vote:</h5>\n        <form onSubmit={onsubmit}>\n          <select name=\"candidate\" className=\"form-control\" onChange={onchange}>\n            <option defaultValue value=\"\">\n              Select\n            </option>\n            <option value=\"1\">{canidate1.name}</option>\n            <option value=\"2\">{canidate2.name}</option>\n          </select>\n          <button className=\"btn btn-primary mt-2 btn-md w-100\">\n            Vote Candidate{\"\"} {Canidate}\n          </button>\n        </form>\n      </div>\n      <p className=\"my-5\">\n        Your address: <span className=\"font-weight-bold\">{account}</span>\n      </p>\n    </div>\n\n    \n    )\n}\n\nexport default Body\n","import React ,{useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport electionabi  from './contracts/election.json';\nimport Web3 from 'web3'\nimport Navbar from './Navbar';\nimport Body from './Body';\nimport HTT from './HTT';\n\n\n\nfunction App() {\n\n  useEffect(()=> {\n    loadWeb3();\n    loadBlockchaindata();\n  },[]);\nconst[Currentaccount,setCurrentaccount]=useState(\"\");\nconst[loader,setloader]=useState(true);\nconst[Electionsm,setElectionsm]=useState();\nconst[candidate1,setcandidate1]=useState();\nconst[candidate2,setcandidate2]=useState();\n  const loadWeb3 = async ()=>{\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }\n  else if(window.web3)\n     {\n       window.web3=new Web3(window.web3.currentProvider);\n       \n     }\n    else\n     {\n       window.alert(\"not present\");\n     }\n\n  }\n  const loadBlockchaindata = async ()=>{\n    setloader(true);\n    const web3 = window.web3;\n    const accounts= await web3.eth.getAccounts();\n    const account = accounts[0];\n    setCurrentaccount(account);\n    const networkId= await web3.eth.net.getId();\n    const networkData= electionabi.networks[networkId];\n\n    if(networkData)\n    {\n      const election=new web3.eth.Contract(electionabi.abi,networkData.address);\n  \n    const candidate1=await election.methods.candidates(1).call();\n   /// const candidate1id=candidate1.id;\n    //const candidate1name=candidate1.name;\n    //const candidate1votecount=candidate1.votecount;\n    const candidate2=await election.methods.candidates(2).call();\n    //const candidate2id=candidate2.id;\n    //const candidate2name=candidate2.name;\n    //const candidate2votecount=candidate2.votecount;\n    setcandidate1(candidate1);\n    setcandidate2(candidate2);\n      setElectionsm(election);\n      console.log(election);\n      setloader(false);\n    }\n    else{\n      window.alert(\"contract is not present here\");\n    }\n  \n  }\n  if(loader){\n    return <div>loading..</div>\n  }\n  const votecanidate = async(canidateid)=>{\n    setloader(true);\n    await Electionsm.methods.vote(canidateid).send({from : Currentaccount})\n    .on('tranctionhash',()=>{\n      console.log(\"successfully ran\");\n    })\n    setloader(false);\n  }\n\n  return (\n    <div>\n     <Navbar account={Currentaccount}/>\n     <Body canidate1={candidate1} canidate2={candidate2} votecanidate={votecanidate} account={Currentaccount}/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}